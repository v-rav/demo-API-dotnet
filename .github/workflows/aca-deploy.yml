name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  ACR_NAME: acrcmfajinkyab.azurecr.io  # Azure Container Registry (ACR)
  ACR_LOGIN_SERVER: acrcmfajinkyab      # ACR Login Name (without .azurecr.io)
  SERVICE_NAME: net-demo-api            # Microservice Name
  RESOURCE_GROUP: RG-Global-RavinderRana-Appteam
  ACA_ENV: acaenvdev-rav
  LOCATION: eastus
  IMAGE_NAME: net-demo-api 
  IMAGE_TAG: latest
  CPU: 0.5
  MEMORY: 1Gi
  UMI_NAME: umai-cmf-ajinkyab-acr  # User-Managed Identity Name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          echo "ðŸ”‘ Logging into Azure Container Registry..."
          az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - name: Build and Push Image to ACR
        run: |
          set -e  # Exit on failure

          IMAGE_FULL_NAME=${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}

          echo "ðŸ”¨ Building Docker image..."
          docker build -t $IMAGE_FULL_NAME:${{ github.sha }} .

          echo "ðŸ“¤ Pushing image to ACR..."
          docker push $IMAGE_FULL_NAME:${{ github.sha }}

          echo "ðŸ“¤ Tagging and pushing 'latest' image..."
          docker tag $IMAGE_FULL_NAME:${{ github.sha }} $IMAGE_FULL_NAME:latest
          docker push $IMAGE_FULL_NAME:latest

      - name: Assign User-Managed Identity to Container App
        run: |
          echo "ðŸ”„ Assigning User-Managed Identity to Container App..."
          az containerapp identity assign \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --user-assigned /subscriptions/$(az account show --query id -o tsv)/resourceGroups/${{ env.RESOURCE_GROUP }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{ env.UMI_NAME }}

      - name: Configure ACR Authentication with UMI
        run: |
          echo "ðŸ”‘ Configuring ACR authentication with User-Managed Identity..."
          az containerapp registry set \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server ${{ env.ACR_NAME }} \
            --identity ${{ env.UMI_NAME }}

      - name: Deploy to Azure Container Apps (Create if not exists)
        run: |
          echo "ðŸš€ Checking if Azure Container App exists..."
          if az containerapp show --name ${{ env.SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} &>/dev/null; then
            echo "âœ… Container App exists. Updating..."
            az containerapp update \
              --name ${{ env.SERVICE_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest
          else
            echo "âš¡ Container App does not exist. Creating..."
            az containerapp create \
              --name ${{ env.SERVICE_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --environment ${{ env.ACA_ENV }} \
              --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest \
              --cpu ${{ env.CPU }} \
              --memory ${{ env.MEMORY }} \
              --ingress external
