name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  ACR_NAME: acrcmfajinkyab.azurecr.io  # Azure Container Registry (ACR)
  ACR_LOGIN_SERVER: acrcmfajinkyab      # ACR Login Name (without .azurecr.io)
  SERVICE_NAME: net-demo-api            # Microservice Name
  RESOURCE_GROUP: RG-Global-RavinderRana-Appteam
  ACA_ENV: acaenvdev-rav
  LOCATION: eastus
  IMAGE_NAME: net-demo-api
  IMAGE_TAG: latest
  CPU: 0.5
  MEMORY: 1Gi
  UMI_ID: "/subscriptions/edf6dd9d-7c4a-4bca-a997-945f3d60cf4e/resourcegroups/RG-AjinkyaBagwe-AppMigration/providers/Microsoft.ManagedIdentity/userAssignedIdentities/umai-cmf-ajinkyab-acr"

jobs:
  build-and-push:
    name: Build and Push Image to ACR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR (Retry on Failure)
        run: |
          echo "üîë Logging into Azure Container Registry..."
          for i in {1..3}; do
            az acr login --name ${{ env.ACR_LOGIN_SERVER }} && break
            echo "üîÑ Retry ACR login ($i)..."
            sleep 5
          done

      - name: Build and Push Image to ACR
        run: |
          set -e  # Exit on failure
          IMAGE_FULL_NAME=${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}

          echo "üî® Building Docker image..."
          docker build -t $IMAGE_FULL_NAME:${{ github.sha }} .

          echo "üì§ Pushing image to ACR..."
          docker push $IMAGE_FULL_NAME:${{ github.sha }}

          echo "üì§ Tagging and pushing 'latest' image..."
          docker tag $IMAGE_FULL_NAME:${{ github.sha }} $IMAGE_FULL_NAME:latest
          docker push $IMAGE_FULL_NAME:latest

  create-container-app:
    name: Create or Update Azure Container App
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create or Update Azure Container App
        run: |
          echo "‚ö° Creating or updating Azure Container App..."
          az containerapp create \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.ACA_ENV }} \
            --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest \
            --cpu ${{ env.CPU }} \
            --memory ${{ env.MEMORY }} \
            --ingress external || echo "‚ÑπÔ∏è Container App may already exist."

  assign-umi-and-configure-acr:
    name: Assign UMI and Configure ACR Auth
    runs-on: ubuntu-latest
    needs: create-container-app
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Assign User-Managed Identity to Container App
        run: |
          echo "üîÑ Assigning User-Managed Identity to Container App..."
          az containerapp identity assign \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --user-assigned "${{ env.UMI_ID }}"

      - name: Assign AcrPull Role to UMI
        run: |
          echo "üîë Assigning 'AcrPull' role to UMI..."
          az role assignment create \
            --assignee "${{ env.UMI_ID }}" \
            --role "AcrPull" \
            --scope "/subscriptions/edf6dd9d-7c4a-4bca-a997-945f3d60cf4e/resourceGroups/RG-AjinkyaBagwe-AppMigration/providers/Microsoft.ContainerRegistry/registries/${{ env.ACR_LOGIN_SERVER }}"

      - name: Verify Role Assignment
        run: |
          echo "üîç Checking if 'AcrPull' role is assigned..."
          ROLE_ASSIGNED=$(az role assignment list --assignee "${{ env.UMI_ID }}" --query "[?roleDefinitionName=='AcrPull']" -o tsv)
          if [ -z "$ROLE_ASSIGNED" ]; then
            echo "‚ùå 'AcrPull' role is missing! Exiting..."
            exit 1
          fi
          echo "‚úÖ 'AcrPull' role is assigned."

      - name: Configure ACR Authentication with UMI
        run: |
          echo "üîë Configuring ACR authentication with User-Managed Identity..."
          az containerapp registry set \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server ${{ env.ACR_NAME }} \
            --identity "${{ env.UMI_ID }}"

  deploy-container-app:
    name: Deploy to Azure Container App
    runs-on: ubuntu-latest
    needs: assign-umi-and-configure-acr
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy/Update Azure Container App
        run: |
          echo "üöÄ Deploying application..."
          az containerapp update \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest
