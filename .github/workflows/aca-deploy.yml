name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  ACR_NAME: acrcmfajinkyab.azurecr.io  # Azure Container Registry (ACR)
  SERVICE_NAME: myservice              # Microservice Name
  RESOURCE_GROUP: RG-Global-RavinderRana-Appteam
  ACA_ENV: acaenvdev-rav
  LOCATION: eastus
  IMAGE_NAME: my-service
  IMAGE_TAG: latest
  UMI_CLIENT_ID: "2f316b9d-05a6-49a7-ac54-5595db0d2635"  # Replace with your User-Managed Identity Client ID

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Image to ACR
        run: |
          set -e  # Exit on failure

          echo "ðŸ”¨ Building Docker image..."
          docker build -t ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

          echo "ðŸ“¤ Pushing image to ACR..."
          docker push ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

          # Also push the 'latest' tag
          docker tag ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Assign AcrPull Role to UMI (If Not Already Assigned)
        run: |
          echo "ðŸ”‘ Ensuring UMI has 'AcrPull' role..."
          ACR_ID=$(az acr show --name ${{ env.ACR_NAME }} --query id --output tsv)
          if ! az role assignment list --assignee ${{ env.UMI_CLIENT_ID }} --scope $ACR_ID --query "[?roleDefinitionName=='AcrPull']" --output tsv | grep -q "AcrPull"; then
            echo "âš¡ Assigning AcrPull role to UMI..."
            az role assignment create --assignee ${{ env.UMI_CLIENT_ID }} --role "AcrPull" --scope $ACR_ID
          else
            echo "âœ… UMI already has AcrPull role."
          fi

      - name: Configure Container App to Use UMI for ACR
        run: |
          echo "ðŸ”„ Configuring Azure Container Apps to use UMI for ACR..."
          az containerapp registry set \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server ${{ env.ACR_NAME }} \
            --identity ${{ env.UMI_CLIENT_ID }}

      - name: Deploy to Azure Container Apps
        run: |
          echo "ðŸš€ Deploying to Azure Container Apps..."
          az containerapp update \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:latest
